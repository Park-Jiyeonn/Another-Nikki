// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: judge.proto

package api

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SubmitCodeReq struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,json=user_id,proto3" json:"user_id"`
	UserName             string   `protobuf:"bytes,2,opt,name=UserName,json=user_name,proto3" json:"user_name"`
	ProblemID            int64    `protobuf:"varint,3,opt,name=ProblemID,json=problem_id,proto3" json:"problem_id"`
	Language             string   `protobuf:"bytes,4,opt,name=Language,json=language,proto3" json:"language"`
	Code                 string   `protobuf:"bytes,5,opt,name=Code,json=code,proto3" json:"code"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitCodeReq) Reset()         { *m = SubmitCodeReq{} }
func (m *SubmitCodeReq) String() string { return proto.CompactTextString(m) }
func (*SubmitCodeReq) ProtoMessage()    {}
func (*SubmitCodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4fa635fb2baaa, []int{0}
}
func (m *SubmitCodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitCodeReq.Unmarshal(m, b)
}
func (m *SubmitCodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitCodeReq.Marshal(b, m, deterministic)
}
func (m *SubmitCodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitCodeReq.Merge(m, src)
}
func (m *SubmitCodeReq) XXX_Size() int {
	return xxx_messageInfo_SubmitCodeReq.Size(m)
}
func (m *SubmitCodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitCodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitCodeReq proto.InternalMessageInfo

func (m *SubmitCodeReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *SubmitCodeReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SubmitCodeReq) GetProblemID() int64 {
	if m != nil {
		return m.ProblemID
	}
	return 0
}

func (m *SubmitCodeReq) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *SubmitCodeReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SubmitCodeResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitCodeResp) Reset()         { *m = SubmitCodeResp{} }
func (m *SubmitCodeResp) String() string { return proto.CompactTextString(m) }
func (*SubmitCodeResp) ProtoMessage()    {}
func (*SubmitCodeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4fa635fb2baaa, []int{1}
}
func (m *SubmitCodeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitCodeResp.Unmarshal(m, b)
}
func (m *SubmitCodeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitCodeResp.Marshal(b, m, deterministic)
}
func (m *SubmitCodeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitCodeResp.Merge(m, src)
}
func (m *SubmitCodeResp) XXX_Size() int {
	return xxx_messageInfo_SubmitCodeResp.Size(m)
}
func (m *SubmitCodeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitCodeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitCodeResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SubmitCodeReq)(nil), "AnotherNikki.oj.code_processing.SubmitCodeReq")
	proto.RegisterType((*SubmitCodeResp)(nil), "AnotherNikki.oj.code_processing.SubmitCodeResp")
}

func init() { proto.RegisterFile("judge.proto", fileDescriptor_a2b4fa635fb2baaa) }

var fileDescriptor_a2b4fa635fb2baaa = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4f, 0xf2, 0x30,
	0x18, 0xc7, 0xb3, 0x17, 0x5e, 0x1c, 0x0f, 0x42, 0x4c, 0x4f, 0x0b, 0x31, 0x19, 0x21, 0x1e, 0x88,
	0x09, 0x5d, 0xa2, 0x47, 0x4f, 0x22, 0x17, 0x12, 0x43, 0xc8, 0x8c, 0x17, 0x2f, 0x64, 0x63, 0x8f,
	0xa5, 0x40, 0xd7, 0xda, 0xae, 0x67, 0xbf, 0xa6, 0xa7, 0x7d, 0x80, 0x7d, 0x0a, 0xb3, 0xa2, 0x80,
	0x27, 0xe3, 0x65, 0xf9, 0x3d, 0xcf, 0xfe, 0xfd, 0xa7, 0xfd, 0x41, 0x67, 0x63, 0x33, 0x86, 0x54,
	0x69, 0x59, 0x48, 0x12, 0xde, 0xe7, 0xb2, 0x58, 0xa3, 0x9e, 0xf3, 0xed, 0x96, 0x53, 0xb9, 0xa1,
	0x2b, 0x99, 0xe1, 0x52, 0x69, 0xb9, 0x42, 0x63, 0x78, 0xce, 0xfa, 0x63, 0xc6, 0x8b, 0xb5, 0x4d,
	0xe9, 0x4a, 0x8a, 0x88, 0x49, 0x26, 0x23, 0x77, 0x2e, 0xb5, 0xaf, 0x6e, 0x72, 0x83, 0xa3, 0x7d,
	0xdf, 0xf0, 0xc3, 0x83, 0xee, 0x93, 0x4d, 0x05, 0x2f, 0x1e, 0x64, 0x86, 0x31, 0xbe, 0x91, 0x2b,
	0x68, 0x3d, 0x1b, 0xd4, 0xb3, 0x69, 0xe0, 0x0d, 0xbc, 0x51, 0x63, 0xd2, 0xa9, 0xca, 0xf0, 0xcc,
	0x1a, 0xd4, 0x4b, 0x9e, 0xc5, 0xdf, 0x40, 0xae, 0xc1, 0xaf, 0x53, 0xf3, 0x44, 0x60, 0xf0, 0x6f,
	0xe0, 0x8d, 0xda, 0x93, 0x6e, 0x55, 0x86, 0x6d, 0xf7, 0x3b, 0x4f, 0x04, 0xc6, 0x47, 0x24, 0x63,
	0x68, 0x2f, 0xb4, 0x4c, 0x77, 0x28, 0x66, 0xd3, 0xa0, 0xe1, 0x4a, 0x7b, 0x55, 0x19, 0x82, 0xda,
	0x2f, 0xeb, 0xde, 0x13, 0x26, 0x23, 0xf0, 0x1f, 0x93, 0x9c, 0xd9, 0x84, 0x61, 0xd0, 0x74, 0xd5,
	0xe7, 0x55, 0x19, 0xfa, 0xbb, 0xaf, 0x5d, 0x7c, 0x20, 0x72, 0x09, 0xcd, 0xfa, 0xd6, 0xc1, 0x7f,
	0x97, 0xf2, 0xab, 0x32, 0x6c, 0xd6, 0x3a, 0x62, 0xf7, 0x1d, 0x5e, 0x40, 0xef, 0xf4, 0x65, 0x46,
	0xdd, 0xbc, 0x43, 0xaf, 0xe6, 0xc5, 0xc1, 0x16, 0x11, 0x00, 0xc7, 0x0c, 0xa1, 0xf4, 0x17, 0xbb,
	0xf4, 0x87, 0xaa, 0x7e, 0xf4, 0xa7, 0xbc, 0x51, 0x13, 0xff, 0xa5, 0x45, 0xa3, 0xbb, 0x44, 0xf1,
	0xb4, 0xe5, 0xf4, 0xdf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x09, 0xf9, 0xa6, 0xbb, 0xdd, 0x01,
	0x00, 0x00,
}
