syntax = "proto3";

package service.code_processing.api;
option go_package = ".;api";

// protoc -I=. -I=$GOPATH/pkg/mod --go-grpc_out=. --go-http_out=. --gogo_out=.  *.proto
// Another-Nikki/code_processing/service/api
// kratos proto server *.proto -t ../internal/service

import "google/api/annotations.proto";

service CodeProcessing {
  rpc SubmitCode (SubmitCodeReq) returns (SubmitCodeResp) {
    option (google.api.http) = {
      post: "/api/code/post",
      body: "*",
    };
  };
  rpc UpdateCodeCompileStatus(UpdateCodeCompileStatusReq) returns (UpdateCodeCompileStatusResp);
  rpc UpdateCodeJudgeStatus(UpdateCodeJudgeStatusReq) returns (UpdateCodeJudgeStatusResp);
}

message SubmitCodeReq {
  int64 user_id = 1;
  string user_name = 2;
  int64 problem_id = 3;
  string problem_name = 4;
  string language = 5;
  string code = 6;
}
message SubmitCodeResp {
}

message UpdateCodeCompileStatusReq {
  int64 code_id = 1;
  string status = 2;
  string compile_log = 3;
}
message UpdateCodeCompileStatusResp {

}

message UpdateCodeJudgeStatusReq {
  int64 code_id = 1;
  string compile_status = 2;
  string judge_status = 3;
  string cpu_time_used = 4;
  string memory_used = 5;
}
message UpdateCodeJudgeStatusResp {
}